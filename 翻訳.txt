time-honored tradition 
昔からの伝統

Make changes to a file and push them to GitHub as commits
ファイルを変更し、コミットとしてGitHubにプッシュします

This tutorial teaches you GitHub essentials like repositories
このチュートリアルでは、リポジトリなどのGitHubの基本を学習します

You’ll create your own Hello World repository and learn GitHub Pull Request workflow
独自のHello Worldリポジトリを作成し、GitHub Pull Requestワークフローを学習します

A repository is usually used to organize a single project
通常、リポジトリは単一のプロジェクトを整理するために使用されます

GitHub makes it easy to add one at the same time you create your new repository.
GitHubを使用すると、新しいリポジトリを作成すると同時に簡単に追加できます。

It also offers other common options such as a license file
また、ライセンスファイルなどの他の一般的なオプションも提供します。

In the upper right corner
右上隅に

which is considered to be the definitive branch
決定的なブランチと見なされます

We use branches to experiment and make edits before committing them to master.
ブランチを使用して、マスターにコミットする前に実験と編集を行います。

When you create a branch off the master branch
マスターブランチからブランチを作成するとき

as it was at that point in time
その時点での

The journey that feature takes before it’s merged into master
機能がマスターに統合されるまでにかかる旅

it takes time before
～になるまでには時間がかかる

Have you ever saved different versions of a file?
ファイルの異なるバージョンを保存したことがありますか？

Branches accomplish similar goals in GitHub repositories.
ブランチはGitHubリポジトリで同様の目標を達成します。

Each commit has an associated commit message
各コミットには、コミットメッセージが関連付けられています

which is a description explaining why a particular change was made. 
Commit messages capture the history of your changes, 
so other contributors can understand what you’ve done and why.
これは、特定の変更が行われた理由を説明する説明です。 
コミットメッセージは変更の履歴をキャプチャするので、
他の貢献者はあなたが何をしたのか、そしてその理由を理解できます。

for keeping bug fixes and feature work separate from our master (production) branch.
バグ修正と機能作業をマスター（実稼働）ブランチとは別にするため。

